	--- START ---

[ 2020.01.16 목 ]

#1. 수업소개

사용자와 상호작용하는 웹페이지를 만들기

HTML은 정적
웹페이지도 동적으로 사용자와 상호작용할 수 있게 되기를 바람
이러한 이유로 JavaScript가 등장함

HTML로 만들어진 웹페이지에 JavaScript를 사용해서 사용자와 상호작용할 수 있도록 기능을 추가
= HTML의 정보와 JavaScript의 기능을 모두 갖춘 시스템

HTML - 정보라는 멈춰있는 이미지를 그리는 것
JavaScript - 정보라고 하는 이미지를 영화처럼 움직이게 하는 것


#2. 수업의 목적

night/day 버튼
배경색이 검은색/흰색으로 변함

중요한 점
1) 자바스크립트는 사용자와의 상호작용을 하는 언어이다.
2) 웹브라우저는 한번 화면에 출력되면 자기 자신을 바꿀 수 없다.

자바스크립트는 HTML을 제어하는 언어이다.
자바스크립트는 웹페이지를 동적으로, 다이나믹하게 만드는 특성을 웹페이지에게 부여한다.


==============================
[ 2020.01.18 토 ]

#3. HTML과 JS의 만남: script태그

자바스크립트는 HTML 위에서 동작하는 언어

자바스크립트라는 걸 웹페이지에게 알려주기 위해 script태그를 사용
script태그 안의 내용을 자바스크립트로 해석
웹페이지에 글씨를 출력할 때는 document.write를 사용

<script> document.write("Hello World"); </script>


#4. HTML과 JS의 만남: 이벤트

onclick="alert('Hello')"

onclick 속성값에는 반드시 자바스크립트가 와야 한다.
onclick 속성값은 웹브라우저가 기억하고 있다가,
속성이 위치하고 있는 태그를 클릭(onclick)했을 때 자바스크립트 코드가 동작하도록 한다.

사건(Event)
웹브라우저 위에서 일어나는 일들
ex) onclick, onchange, onkeydown


#5. HTML과 JS의 만남: 콘솔

자바스크립트를 콘솔로 실행시키기

웹브라우저->마우스 우클릭->검사->Console
웹브라우저->마우스 우클릭->검사->element에서 esc 클릭

이미 만들어진 웹페이지에서 자바스크립트 코드를 통해 목적을 달성할 수도 있다.
콘솔을 통해서 자바스크립트를 실행하면 지금 보고 있는 웹페이지를 기반으로 자바스크립트가 실행된다.


#6.  데이터타입 - 문자열과 숫자

문자(열)와 숫자
데이터 타입 = 자료형

@수업에서 다룬 코드
Properties: length
Method: toUpperCase(), indexOf('x')


#7. 변수와 대입 연산자

실습은 콘솔창에서 수행

변수(Variable)는 바뀔 수 있는 값
var x=3;
x=1000; -> 가능

var name = "abc";
변수처리 하는 법 "+x+" 와 같은 방식으로 사용
alert('Hello "+name+"');


#8. 웹브라우저 제어

자바스크립트를 통해 웹브라우저를 제어

<body style="background-color: black; color: white;">
body태그 안의 style 속성, style의 속성의 값은 CSS
속성을 주고자 하는 태그를 웹브라우저에게 알려주어야 함


==============================
[ 2020.01.19 일 ]

# 09~11 강의를 듣기 전
1) CSS는 어떤 목적의 언어인가요?
2) CSS를 웹페이지에 삽입하는 방법은 무엇인가요?
3) style 속성은 무엇인가요? 
4) 선택자가 무엇인가요?
=> 위의 네 가지 질문에 대한 답을 할 수 있는지 체크 후 수강하기


#9. CSS 기초: style 속성

style 속성을 이용해서 CSS 사용하기

<h1 style = "color: black" >: Property
특정 태그를 css로 디자인하고 싶을 경우 style 속성을 사용한다.


#10. CSS 기초: style 태그

style 태그를 이용해서 CSS 사용하기

특정 태그를 꾸미고 싶을 경우 아무 기능과 의미가 없는 태그가 필요하다.
= div태그, span태그
줄바꿈을 하는 태그 = div태그
줄바꿈을 하지 않는 태그 = span태그

span태그 안의 글자를 강조하는 법
1) <span style="font-weight: bold"> 
2) <style> .js { font-weight: bold; } </style>
    <span class = "js">


#11. CSS 기초: 선택자

클래스Class는 "그룹핑"한다는 뜻, 클래스 선택자가 아이디선택자보다 더 포괄적이다.
아이디ID는 어떤 한 가지 대상을 "식별"한다는 뜻, 아이디선택자가 우선순위가 높다.

선택자는 매우매우 중요!
속성을 누구에게 적용할 것인지 타겟팅 하는 것이 중요하기 때문


#12. 제어할 태그 선택하기

3.html 수정

document.querySelector('선택자').style.속성 = '속성값';


#13. 프로그램, 프로그래밍, 프로그래머

HTML = 컴퓨터 언어
자바스크립트 = 컴퓨터 언어 + 컴퓨터 프로그래밍 언어

프로그램Program을 만드는 것에는 "순서"가 중요하다.
순서를 만드는 행위 = 프로그래밍Programming
순서를 만드는 사람 = 프로그래머Programmer

HTML은 시간의 순서에 따라 실행되는 기능은 없다.
하지만 자바스크립트는 시간의 순서에 따라 여러 기능이 실행되어야 한다.
따라서 프로그래밍의 형태를 가지고 있다.


#14. 조건문 예고

조건문
하나의 프로그램이 하나의 흐름으로 가는 것이 아니라, 조건에 따라 다른 순서의 기능들이 실행되도록 하는 것

night/day 버튼을 하나로 만들 수 있는지?
=> 토글Toggle 버튼 구현


==============================
[ 2020.01.21 화 ]

#15. 비교 연산자와 Boolean

ex4.html

1===1 -> true
Boolean: true, false


#16. 조건문

ex5.html

if (true or false) { ... } else { ... }


#17. 조건문의 활용

3.html 수정

value라는 Property 이용 & 조건문 사용
-> if (document.querySelector('#night_day').value == 'night') { ... } else { ... }


#18. 리팩토링 중복의 제거

리팩토링Refactoring
코딩을 한 후 코드에서 비효율적인 부분을 효율적으로 만들어서 코드의 가독성을 높이고,
중복된 코드를 지우는 등 코드를 개선하는 작업

1) 키워드 this는 자기 자신을 의미
document.querySelector('night_day').value => this.value

2) 중복을 없애는 것이 좋은 코딩 방법**
document.querySelector('body') => 변수 target 사용


#19. 반복문 예고

@더 나은 페이지를 위한 고민들
웹페이지에 있는 모든 링크의 style속성을 바꿔주는 작업은 어떻게 하지?
= 반복문 이용


==============================
[ 2020.01.23 목 ]

#20. 배열

ex6.html

배열(Array)
서로 연관된 데이터를 담아두는 일종의 수납상자
배열의 생성은 대괄호[] 사용
값과 값 사이는 콤마(,)로 구별

@코드
array.length
array.push(x)


#21. 반복문

ex7.html

반복문Loop
while(true) { ... } -> 무한반복, 무한히 자원을 소모
반복문이 실행되는 순서를 기록하는 변수 생성


#22. 배열과 반복문

ex8.html

반복문으로 링크 걸기
document.write('<li><a href="http://a.com/'+coworkers[i]+'">'+coworkers[i] +'</a></li>');


#23. 배열과 반복문의 활용

3.html 수정

검색 중요**

...
var alist = document.querySelectorAll('a');
while(alist의 길이) { alist[i].style.color = 'powderblue'; ... }


#24. 함수 예고

함수Function는 도구
코드의 양이 증가 -> 웹페이지 크기 증가 -> 인터넷에 전송할 때 시간과 노력이 증가
이를 해결하기 위한 방법이 함수이다.
함수를 사용하면 효율성을 가지게 된다.


==============================
[ 2020.01.24 금 ]

#25. 함수: 함수의 기본

ex9.html

함수의 기본적인 문법
function two() { ... }


#26. 함수: 매개변수와 인자

매개변수parameter와 인자argument
function sum(left, right) { ... }


#27. 함수: 리턴

function sum2(left, right) { ... return left+right; }
매개변수를 통해 들어간 값을 return을 통해서 출력하는 함수
return을 통해 다양한 용도로 함수를 활용할 수 있다.


#28. 함수의 활용

3.html 수정

리팩토링에서 함수는 중요함

nightDayHandler함수
기존의 this 대신 매개변수self를 사용


#29. 객체 예고

3.html 수정

새롭게 도입할 도구 = 객체Object
서로 연관된 함수와 연관된 변수를 같은 이름으로 그룹핑해서 잘 정리정돈하기 위한 수납상자

사실 document도 객체이다.
document 객체 뒤의 querySelector는 객체에 속해있는 함수이다. => 이를 메소드라고 함


==============================
[ 2020.01.25 토 ]

#30. 객체 쓰기와 읽기

ex10.html

배열은 정보를 담는 그릇이면서 정보가 순서대로 저장된다는 특징이 있음
그렇다면 순서 없이 정보가 저장되는 것은? => 객체
객체는 이름이 있는 정리정돈 상자
배열은 대괄호[], 객체는 중괄호{} 사용

var coworkers = { "programmer": "egoing", "designer": "leezche" };
	...
coworkers.bookkeeper = "duru";
coworkers["data scientist"] = "taeho"; => 띄어쓰기가 있는 경우 대괄호 사용


#31. 객체와 반복문

for (var key in coworkers) { ... }
= coworkers에 있는 객체에 있는 데이터들의 수만큼 반복

key와 coworkers[key] = coworkers에 있는 모든 key값과 데이터의 값 


#32. 객체프로퍼티와 메소드

객체에는 함수도 담을 수 있다.

coworkers.showAll = function(){ ... }
coworkers 대신 this라는 키워드를 사용한다.

객체에 소속된 함수 = 메소드
객체에 소속된 변수 = 프로퍼티


#33. 객체의 활용

3.html 수정

객체에서 프로퍼티를 구분할 때에는 콤마(,)를 사용한다.
객체 Body와 객체 Links는 메소드를 가지고 있음


#34. 파일로 쪼개서 정리 정돈하기

colors.js 추가 및 1.html, 2.html, 3.html 수정

서로 연관된 코드를 파일로 묶어서 관리하는 법


#35. 라이브러리와 프레임워크

colors.js 수정

소프트웨어의 생산자, 생산자로서의 소비자

Library VS Framework
라이브러리: 내가 사용할 부품을 가져오는 느낌
프레임워크: 만들려는 것의 공통적인 부분. 반제품과 같은 것
=> 라이브러리와 프레임워크 둘다 다른 사람과 협력하는 모델

라이브러리: CDN으로 검색
ctrl + / => 주석 처리

@ jQuery코드
$('a').css('color', color);
$('body').css('backgroundColor', color);
- jQuery는 $로 시작
- 이 웹페이지의 모든 a/body태그를 jQuery로 제어하겠다는 의미
- css는 자바스크립트를 이용해서 만든 함수

jQuery는 직관적이다.
jQuery는 자바스크립트 커뮤니티에서 가장 중요한 라이브러리 중 하나


#36. UI vs API

UI(User Interface)와 API(Application Programming Interface)

UI: 사용자가 시스템을 제어하기 위해서 사용하는 조작 장치
API: 애플리케이션을 만들기 위해 프로그래밍을 할 때 사용하는 조작 장치들

API와 순서는 서로 필연적인 관계이다.
API를 결합해서, 응용해서 응용 프로그램을 만들 수 있다.


#37. 수업을 마치며

자신의 프로젝트 시작하는 것**

@ 프로젝트 시작시 팁
처음부터 모든 개념을 총동원하려고 하지 말 것
=> 최소한의 도구만을 가지고 문제를 해결하는 걸 목표로.
=> 기본은 순서에 따라 실행되는 것

document객체를 주의깊게 볼 것
=> 이후 DOM(Document Object Model)로 넓히기

window
ajax
cookie
offline web application
webRTC
speech
webGL
webVR


	--- END ---